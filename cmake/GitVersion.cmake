find_package(Git REQUIRED)

execute_process(
    COMMAND ${GIT_EXECUTABLE} describe --tags
    WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
    OUTPUT_VARIABLE GIT_TAG
    OUTPUT_STRIP_TRAILING_WHITESPACE
    RESULT_VARIABLE GIT_RESULT)

if(NOT GIT_RESULT EQUAL 0)
    message(WARNING "Failed to get tag")
    set(GIT_COMMIT_SHORT_HASH "master")
    set(VERSION_MAJOR 0)
    set(VERSION_MINOR 0)
    set(VERSION_PATCH 1)
    set(PROJECT_VERSION "${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}")
    set(FULL_VERSION "${PROJECT_VERSION}+${GIT_COMMIT_SHORT_HASH}")
    return()
endif()

execute_process(
    COMMAND ${GIT_EXECUTABLE} rev-parse --short=7 HEAD
    WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
    OUTPUT_VARIABLE GIT_COMMIT_SHORT_HASH
    OUTPUT_STRIP_TRAILING_WHITESPACE)

if(GIT_TAG MATCHES "^v([0-9]+)\\.([0-9]+)\\.([0-9]+)(-.*)?$")
    set(VERSION_MAJOR ${CMAKE_MATCH_1})
    set(VERSION_MINOR ${CMAKE_MATCH_2})
    set(VERSION_PATCH ${CMAKE_MATCH_3})
    set(PROJECT_VERSION "${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}")
    set(FULL_VERSION "${PROJECT_VERSION}+${GIT_COMMIT_SHORT_HASH}")
else()
    message(FATAL_ERROR "Tag '${GIT_TAG}' does not match semver format")
endif()
